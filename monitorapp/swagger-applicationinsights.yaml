# This Open API is based on Azure Application Insights REST API
# See https://dev.applicationinsights.io/documentation/overview
swagger: '2.0'
info:
  version: v1
  title: Integration Villain project - Application Insights Open APIs
  description: >-
    This API exposes Azure Application Insights APIs which monitor
    Microservice-based Kubernetes applications (RPSLS)
  contact:
    name: DevRel Korea - Integration Villain team
    url: 'https://github.com/devrel-kr/integration-villain'
    email: devrel-kr@microsoft.com
  license:
    name: MIT License
    url: 'https://github.com/devrel-kr/integration-villain/blob/main/LICENSE'
host: api.applicationinsights.io
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: x-api-Key
security:
  - APIKeyHeader: []
paths:
  '/apps/{appId}/metrics/{metricId}':
    get:
      operationId: Metrics_Get
      summary: Retrieve metric data
      description: Gets metric values for a single metric
      parameters:
        - $ref: '#/parameters/appId'
        - $ref: '#/parameters/metricId'
        - $ref: '#/parameters/metricsTimespan'
        - $ref: '#/parameters/metricsInterval'
        - $ref: '#/parameters/metricsAggregation'
        - $ref: '#/parameters/metricsSegment'
        - $ref: '#/parameters/metricsTop'
        - $ref: '#/parameters/metricsOrderBy'
        - $ref: '#/parameters/metricsFilter'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/metricsResult'
        default:
          description: An error response object.
          schema:
            $ref: '#/definitions/errorResponse'
parameters:
  appId:
    name: appId
    description: >-
      ID of the application. This is Application ID from the API Access settings
      blade in the Azure portal.
    in: path
    required: true
    type: string
    x-ms-parameter-location: method
  metricId:
    name: metricId
    in: path
    required: true
    x-ms-parameter-location: method
    description: >-
      ID of the metric. This is either a standard AI metric, or an
      application-specific custom metric.
    type: string
    enum:
      - requests/count
      - requests/duration
    x-ms-enum:
      name: MetricId
      modelAsString: true
  metricsTimespan:
    name: timespan
    in: query
    required: false
    x-ms-parameter-location: method
    description: >-
      The timespan over which to retrieve metric values. This is an ISO8601 time
      period value. If timespan is omitted, a default time range of `PT12H`
      ("last 12 hours") is used. The actual timespan that is queried may be
      adjusted by the server based. In all cases, the actual time span used for
      the query is included in the response.
    type: string
  metricsAggregation:
    name: aggregation
    in: query
    collectionFormat: csv
    x-ms-parameter-location: method
    description: >-
      The aggregation to use when computing the metric values. To retrieve more
      than one aggregation at a time, separate them with a comma. If no
      aggregation is specified, then the default aggregation for the metric is
      used.
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - min
        - max
        - avg
        - sum
        - count
        - unique
      x-ms-enum:
        name: MetricsAggregation
        modelAsString: true
  metricsInterval:
    name: interval
    in: query
    x-ms-parameter-location: method
    description: >-
      The time interval to use when retrieving metric values. This is an ISO8601
      duration. If interval is omitted, the metric value is aggregated across
      the entire timespan. If interval is supplied, the server may adjust the
      interval to a more appropriate size based on the timespan used for the
      query. In all cases, the actual interval used for the query is included in
      the response.
    type: string
    format: duration
  metricsSegment:
    name: segment
    in: query
    collectionFormat: csv
    x-ms-parameter-location: method
    description: >-
      The name of the dimension to segment the metric values by. This dimension
      must be applicable to the metric you are retrieving. To segment by more
      than one dimension at a time, separate them with a comma (,). In this
      case, the metric data will be segmented in the order the dimensions are
      listed in the parameter.
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - applicationBuild
        - applicationVersion
        - authenticatedOrAnonymousTraffic
        - browser
        - browserVersion
        - city
        - cloudRoleName
        - cloudServiceName
        - continent
        - countryOrRegion
        - deploymentId
        - deploymentUnit
        - deviceType
        - environment
        - hostingLocation
        - instanceName
      x-ms-enum:
        name: MetricsSegment
        modelAsString: true
  metricsTop:
    name: top
    in: query
    x-ms-parameter-location: method
    description: >-
      The number of segments to return.  This value is only valid when segment
      is specified.
    type: integer
    format: int32
  metricsOrderBy:
    name: orderby
    in: query
    x-ms-parameter-location: method
    description: >-
      The aggregation function and direction to sort the segments by.  This
      value is only valid when segment is specified.
    type: string
  metricsFilter:
    name: filter
    in: query
    x-ms-parameter-location: method
    description: >-
      An expression used to filter the results.  This value should be a valid
      OData filter expression where the keys of each clause should be applicable
      dimensions for the metric you are retrieving.
    type: string
definitions:
  metricsResult:
    description: A metric result.
    properties:
      value:
        $ref: '#/definitions/metricsResultInfo'
  metricsResultInfo:
    description: A metric result data.
    type: object
    properties:
      start:
        description: Start time of the metric.
        type: string
        format: date_time
      end:
        description: Start time of the metric.
        type: string
        format: date_time
      interval:
        description: The interval used to segment the metric data.
        type: string
        format: duration
      segments:
        description: Segmented metric data (if segmented).
        type: array
        items:
          $ref: '#/definitions/metricsSegmentInfo'
    additionalProperties:
      type: object
  metricsSegmentInfo:
    description: A metric segment
    type: object
    properties:
      start:
        description: >-
          Start time of the metric segment (only when an interval was
          specified).
        type: string
        format: date_time
      end:
        description: >-
          Start time of the metric segment (only when an interval was
          specified).
        type: string
        format: date_time
      segments:
        description: Segmented metric data (if further segmented).
        type: array
        items:
          $ref: '#/definitions/metricsSegmentInfo'
    additionalProperties:
      type: object
  errorDetail:
    title: Error details.
    type: object
    properties:
      code:
        description: The error's code.
        type: string
      message:
        description: A human readable error message.
        type: string
      target:
        description: Indicates which property in the request is responsible for the error.
        type: string
      value:
        description: Indicates which value in 'target' is responsible for the error.
        type: string
      resources:
        description: Indicates resources which were responsible for the error.
        type: array
        items:
          type: string
      additionalProperties:
        type: object
    required:
      - code
      - message
  errorInfo:
    title: The code and message for an error.
    type: object
    properties:
      code:
        description: A machine readable error code.
        type: string
      message:
        description: A human readable error message.
        type: string
      details:
        description: error details.
        type: array
        items:
          $ref: '#/definitions/errorDetail'
      innererror:
        description: Inner error details if they exist.
        $ref: '#/definitions/errorInfo'
      additionalProperties:
        type: object
    required:
      - code
      - message
  errorResponse:
    title: Error details.
    description: Contains details when the response code indicates an error.
    type: object
    properties:
      error:
        description: The error details.
        $ref: '#/definitions/errorInfo'
    required:
      - error
